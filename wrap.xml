<tool id="rpCompletion" name="Complete Reactions" version="1.0.0">
  <description>From the output of RP2Paths and RetroPath2.0, generate SBML unique and complete (with cofactors) pathways with mono-component reactions</description>
  <requirements>
    <requirement type="package">rptools</requirement>
  </requirements>
  <stdio>
    <exit_code range="1" level="fatal" description="Could not Xref compartment_id" />
    <exit_code range="2" level="fatal" description="ValueError returned" />
  </stdio>
  <command detect_errors="exit_code"><![CDATA[
      python -m rptools.rpcompletion
        '$rp2_pathways'
        '$rp2paths_compounds'
        '$rp2paths_pathways'
        completed_pathways
        --compartment_id '$adv.compartment_id'
        --pathway_id '$adv.pathway_id'
        --species_group_id '$adv.species_group_id'
        --upper_flux_bound '$adv.upper_flux_bound'
        --lower_flux_bound '$adv.lower_flux_bound'
  ]]></command>
  <inputs>
    <param name="rp2paths_pathways" type="data" format="csv" label="RP2paths pathways" />
    <param name="rp2paths_compounds" type="data" format="tsv" label="RP2paths compounds" />
    <param name="rp2_pathways" type="data" format="csv" label="RetroPath2.0 pathways" />
    <section name="adv" title="Advanced Options" expanded="false">
      <param name="max_subpaths_filter" type="integer" value="10" label="Max subpaths generated per pathway" />
      <param name="compartment_id" type="text" value="MNXC3" label="SBML compartment ID" />
      <param name="pathway_id" type="text" value="rp_pathway" label="SBML heterologous pathway ID" />
      <param name="species_group_id" type="text" value="central_species" label="rpSBML Central Species ID" />
      <param name="upper_flux_bound" type="integer" value="999999" label="Upper flux bound" />
      <param name="lower_flux_bound" type="integer" value="0" label="Lower flux bound" />
    </section>
  </inputs>
    <collection name="list_output" type="list" label="${tool.name}">
      <discover_datasets pattern="(?P&lt;designation&gt;.+)\.xml" ext="xml" directory="completed_pathways" visible="false" />
    </collection>
  <!-- <outputs>
    <data name="output" format="tar.gz" label="${tool.name}" />
  </outputs> -->
  <help><![CDATA[
rpCompletion
============

Completes mono-component reactions output by RetroPath2.0 with the appropriate cofactors. Creates sub-paths when multiple reaction rules are associated with a single reaction. Input is a single pathways file produced by RP2Paths. It stands on rpCache which store pre-computed data.

Input
-----

Required:

* **-rp2paths_pathways**: (string) Path to the rp2paths pathways file
* **-rp2paths_compounds**: (string) Path to the rp2paths compounds file
* **-rp2_pathways**: (string) Path to the RetroPath2.0 pathways file

Advanced options:

* **-upper_flux_bound**: (integer, default=9999) Upper flux bound value
* **-lower_flux_bound**: (integer, default=0) Lower flux bound value
* **-max_subpaths_filter**: (integer, default=10, 0=nofilter) Number of subpaths per path
* **-pathway_id**: (string, default=rp_pathway) ID of the heterologous pathway
* **-compartment_id**: (string, default=MNXC3 (i.e. cytoplasm)) Heterologous pathway compartment ID
* **-species_group_id**: (string, default=central_species) ID of the central species, i.e. not cofactors, in the heterologous reactions
* **-sm**: (optional, string, default: file) Store mode. If 'file', rpCache is supposed to be stored in files. Else, the rpCache is supposed to be stored in a Redis database which the name is the value of this input field.

Output
------

* **-outputTar**: (string) Path to the output tar.xz file


Prerequisites
-------------

* Docker - `Install <https://docs.docker.com/install/>`_
* rpCache: `brsynth/rpCache <https://hub.docker.com/r/brsynth/rpcache>`_

Authors
-------

* **Melchior du Lac**
* **Joan HÃ©risson**

Acknowledgments
---------------

* Thomas Duigou

How to cite rpCompletion?
-------------------------

Licence
-------
rpCompletion is released under the MIT licence.

]]></help>
</tool>
