<tool id="rpReader" name="Pathways to SBML" version="0.1">
  <description>From the output of RP2Paths and RetroPath2.0, generate SBML pathways with mono-component reactions (Galaxy Version 0.1)</description>
  <requirements>
    <container type="docker">brsynth/rpreader-new</container>
  </requirements>
  <stdio>
    <regex match="WARNING:" level="warning" />
	  <regex match="ERROR:" level="error" />
  </stdio>
  <command detect_errors="exit_code"><![CDATA[
    '$__tool_directory__/run.py' -rp2paths_compounds '$rp2paths_compounds' -rp2_pathways '$rp2_pathways' -rp2paths_pathways '$rp2paths_pathways' -output '$output' -maxRuleIds '$adv.maxRuleIds' -compartment_id '$adv.compartment_id' -pathway_id '$adv.pathway_id' -species_group_id '$adv.species_group_id' -upper_flux_bound '$adv.upper_flux_bound' -lower_flux_bound '$adv.lower_flux_bound'
  ]]></command>
  <inputs>
    <param name="rp2paths_pathways" type="data" format="csv" label="RP2paths Pathways" />
    <param name="rp2paths_compounds" type="data" format="tsv" label="RP2paths Compounds" />
    <param name="rp2_pathways" type="data" format="csv" label="RetroPath2.0 Pathways" />
    <section name="adv" title="Advanced Options" expanded="false">
      <param name="maxRuleIds" type="integer" value="2" label="out_paths max number of substeps per step" />
      <param name="compartment_id" type="text" value="MNXC3" label="SBML compartment ID" />
      <param name="pathway_id" type="text" value="rp_pathway" label="rpSBML pathway ID" />
      <param name="species_group_id" type="text" value="central_species" label="rpSBML Central Species ID" />
      <param name="upper_flux_bound" type="integer" value="999999" label="Upper flux bound" />
      <param name="lower_flux_bound" type="integer" value="0" label="Lower flux bound" />
    </section>
  </inputs>
  <outputs>
    <data name="output" format="tar" label="rpReader" />
  </outputs>
  <help><![CDATA[
rpReader
========


* Docker image: `brsynth/rpreader <https://hub.docker.com/r/brsynth/rpreader>`_

RetroPath2.0 and rp2paths to SBML conversion tool. Takes for input the output of both RetroPath2.0 and rp2paths or RetroPath3.0 and generates a series of enriches SBML files with all the files contained within them.

Input
-----

Required:


* **-rp2paths_pathways**\ : (string) Path to the rp2paths pathways file
* **-rp2paths_compounds**\ : (string) Path to the rp2paths compounds file
* **-rp2_pathways**\ : (string) Path to the RetroPath2.0 pathways file

Advanced options:


* **-upper_flux_bound**\ : (integer, default=9999) Upper flux bound value
* **-lower_flux_bound**\ : (integer, default=0) Lower flux bound value
* **-maxRuleIds**\ : (integer, default=2) Number of subpaths per paths
* **-pathway_id**\ : (string, default=rp_pathway) ID of the heterologous pathway
* **-compartment_id**\ : (string, default=MNXC3 (i.e. cytoplasm)) Heterologous pathway compartment ID
* **-species_group_id**\ : (string, default=central_species) ID of the central species, i.e. not cofactors, in the heterologous reactions
* **server_url**\ : (string, default=http://0.0.0.0:8888/REST) IP address of the REST service

Output
------


* **-outputTar**\ : (string) Path to the output tar.xz file

Installing
----------

To build the image, use the Dockerfile using the following command:

.. code-block::

   docker build -t brsynth/rpreader-rest -f Dockerfile .

To run the service on the localhost as the Galaxy instance run:

.. code-block::

   docker run -p 8888:8888 brsynth/rpreader-rest

Testing
^^^^^^^

To run the test, untar the test.tar.xz folder and run the following command:

.. code-block::

   python tool_rp2Reader.py -rp2paths_compounds test/test_rp2paths_compounds.tsv -rp2_pathways test/test_rp2_pathways.csv -rp2paths_pathways test/test_rp2paths_pathways.csv -output test/test_rpReader.tar

Dependencies
------------


* Base Docker Image: `brsynth/rpBase <https://hub.docker.com/r/brsynth/rpbase>`_
* Cache Docker Image: `brsynth/rpCache <https://hub.docker.com/r/brsynth/rpcache>`_

Contributing
------------

Please read `CONTRIBUTING.md <https://gist.github.com/PurpleBooth/b24679402957c63ec426>`_ for details on our code of conduct, and the process for submitting pull requests to us.

Version
-------

v0.1

Authors
-------


* **Melchior du Lac**

License
-------

This project is licensed under the MIT License - see the `LICENSE.md <LICENSE.md>`_ file for details

Acknowledgments
---------------


* Thomas Duigou
* Joan HÃ©risson

]]></help>
</tool>
